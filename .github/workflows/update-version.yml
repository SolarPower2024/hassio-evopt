name: Update Version Incrementally

permissions:
  contents: write

on:
  schedule:
    - cron: '0 * * * *'  # stündlich
  workflow_dispatch:

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Get latest Docker tag from Docker Hub
      id: get_tag
      run: |
        tag=$(curl -s https://hub.docker.com/v2/repositories/litithio/evopt/tags | jq -r '
          .results
          | sort_by(.tag_last_pushed)
          | last
          | .name')
        echo "Docker tag from hub: $tag"
        echo "tag=$tag" >> $GITHUB_OUTPUT

    - name: Read current version from config.yaml
      id: read_version
      run: |
        ver=$(grep -E '^version:' evopt/config.yaml | awk '{print $2}' | tr -d '"')
        echo "Current version is $ver"
        echo "current_version=$ver" >> $GITHUB_OUTPUT

    - name: Bump patch version (0.0.x)
      id: bump_version
      run: |
        # Extrahiere current patch number
        ver=${{ steps.read_version.outputs.current_version }}
        echo "Current version read: $ver"

        # Prüfe Version, falls nicht im 0.0.x Format: fallback auf 0.0.0
        if [[ ! $ver =~ ^0\.0\.([0-9]+)$ ]]; then
          patch=0
        else
          patch=$(echo "$ver" | sed -E 's/^0\.0\.([0-9]+)$/\1/')
        fi

        new_patch=$((patch + 1))
        new_version="0.0.$new_patch"
        echo "New version: $new_version"

        echo "new_version=$new_version" >> $GITHUB_OUTPUT

    - name: Update config.yaml with new version
      run: |
        new_ver=${{ steps.bump_version.outputs.new_version }}
        sed -i "s/^version:.*/version: \"$new_ver\"/" evopt/config.yaml

    - name: Commit and push updated config.yaml
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "Bump version to ${{ steps.bump_version.outputs.new_version }}"
        branch: main
